env_files = [
    ".ports.env"
]

[scripts]
# Gets the ID of a running Docker container by its name (utility script)
getcontainerid.cmd = "docker ps | awk -v containername=\"%containername\" '$0 ~ containername{print $1}'"
getcontainerid.args = [
    "containername"
]
# Use this script to run any `docker-compose` commands, it automatically interpolates environment variables
dc = "docker-compose --env-file .ports.env %%"
# Rebuilds all containers, use this when you change any Docker configurations or update Rust dependencies
rebuild = "bonnie dc up --build -d"
# Starts all containers without creating a shell
up = "bonnie dc up -d"
# Opens a shell into the Docker container
sh = "bonnie dc run --entrypoint \"/bin/zsh\" --use-aliases --rm playground"
# Brings down all Docker containers
end = "bonnie dc down"

# General Rust scripts
doc = "cargo doc"
test = "cargo watch -x \"test\""
dev = "cargo watch -x \"check\""
check = "cargo check && cargo fmt -- --check && cargo clippy && cargo test"

# Scripts for individual containers (which correspond to testing examples)
start-server = "bonnie dc up -d server"
stop-server = "bonnie dc stop server"
attach-server = "bonnie start-server && docker attach $(bonnie getcontainerid diana.server)"
sh-server = { cmd = "bonnie dc run --entrypoint \"/bin/zsh\" -p %SERVER_PORT:7000 --use-aliases --rm server", env_vars = ["SERVER_PORT"] }
start-serverless = "bonnie dc up -d serverless"
stop-serverless = "bonnie dc stop serverless"
attach-serverless = "bonnie start-serverless && docker attach $(bonnie getcontainerid diana.serverless)"
sh-serverless = { cmd = "bonnie dc run --entrypoint \"/bin/zsh\" -p %SERVERLESS_PORT:5000 --use-aliases --rm serverless", env_vars = ["SERVERLESS_PORT"] }
start-subscriptions-server = "bonnie dc up -d subscriptions-server"
stop-subscriptions-server = "bonnie dc stop subscriptions-server"
attach-subscriptions-server = "bonnie start-subscriptions-server && docker attach $(bonnie getcontainerid diana.subscriptions-server)"
sh-subscriptions-server = { cmd = "bonnie dc run --entrypoint \"/bin/zsh\" -p %SUBSCRIPTIONS_SERVER_PORT:6000 --use-aliases --rm subscriptions-server", env_vars = ["SUBSCRIPTIONS_SERVER_PORT"] }

# Releases the project to GitHub
release = "standard-version && git push --follow-tags origin main"
